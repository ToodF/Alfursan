@using Alfursan.Domain
@model Alfursan.Web.Models.UserViewModel


@using (Html.BeginForm(null, null, FormMethod.Post, new { @action = "/api/UserApi" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserViewModel</h4>
        @Html.HiddenFor(model => model.UserId)
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
    var profile = EnumProfile.Customer;
    if (Model != null)
    {
        profile = Model.ProfileId;
    }
    var adminOpt = profile == EnumProfile.Admin ? new { @checked = "checked" } : null;
    var userOpt = profile == EnumProfile.User ? new { @checked = "checked" } : null;
    var customerOpt = profile == EnumProfile.Customer ? new { @checked = "checked" } : null;
    var customOfficerOpt = profile == EnumProfile.CustomOfficer ? new { @checked = "checked" } : null;
                }
                @Html.RadioButtonFor(m => m.ProfileId, (int)EnumProfile.Admin, adminOpt) @Html.Label(Alfursan.Resx.Management.Profile_Admin)
                @Html.RadioButtonFor(m => m.ProfileId, (int)EnumProfile.User, userOpt)@Html.Label(Alfursan.Resx.Management.Profile_User)
                @Html.RadioButtonFor(m => m.ProfileId, (int)EnumProfile.Customer, customerOpt) @Html.Label(Alfursan.Resx.Management.Profile_Customer)
                @Html.RadioButtonFor(m => m.ProfileId, (int)EnumProfile.CustomOfficer, customOfficerOpt) @Html.Label(Alfursan.Resx.Management.Profile_CustomOfficer)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, (List<SelectListItem>)ViewData["List"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="form-item-customerofficer" style="display: @{Write((Model != null && Model.ProfileId == EnumProfile.Customer) ? "block" : "none");}">
            @Html.LabelFor(model => model.CustomOfficerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustomOfficerId, (List<SelectListItem>)ViewData["List"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomOfficerId, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" />
    </div>
}

<script>
    $(document).ready(function () {
        $("input[name='ProfileId']").change(function () {
            var id = @((int)EnumProfile.Customer);
            if ($(this).val() == id) {
                $("#form-item-customerofficer").css("display", "block");
            } else {
                $("#form-item-customerofficer").css("display", "none");
            }
        });
    });
</script>
